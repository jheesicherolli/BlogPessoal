package org.generation.blogPessoal.controller;

import java.util.List;

import org.generation.blogPessoal.model.Postagem;
import org.generation.blogPessoal.repository.PostagemRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


@RestController
//mostra que se trata de uma classe controladota da API (onde ficam os endpoints).

@RequestMapping("/postagens")
//Mostra e define por qual URI a classe será acessada.
// indica um endpoint

@CrossOrigin("*")
//aceita requisições de qualquer origem, ou seja permite que requisições de outras portas sejam aceitas na minha aplicação.
public class PostagemController {

	@Autowired
	//funciona como injeção de dependencia, transferindo a responsabilidade
	private PostagemRepository repository;
	
	@GetMapping
	//GetMapping indica o verbo que pode ser utilizado no endpoint
	//PostMapping para postar, criação
	//PutMapping atualiza
	//DeleteMapping deleta 
	//Mapping é para mapear essa função
	public ResponseEntity<List<Postagem>> GetAll()
	//GetAll é só um nome que dou para minha fnução buscar meus dados, poderia buscaPostagem
	//list serve para pegar uma postagem ou uma lista de postagem
	{
		return ResponseEntity.ok(repository.findAll());
		
	}
	
	@PostMapping
	public ResponseEntity<Postagem> adicionaPostagem(@RequestBody Postagem postagem)
	//@RequestBory
	{
		return ResponseEntity.status(HttpStatus.CREATED).body(repository.save(postagem));
		
	}
}
